{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState('white'),\n    _useState6 = _slicedToArray(_useState5, 2),\n    mode = _useState6[0],\n    setMode = _useState6[1];\n  useEffect(function () {\n    var fetchData = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var storedMode = yield AsyncStorage.getItem('mode');\n          if (storedMode) {\n            console.log(storedMode);\n            setMode(storedMode);\n          }\n        } catch (error) {\n          console.error(error);\n        }\n      });\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchData();\n  }, []);\n  var handleLogin = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var users = yield AsyncStorage.getItem('users');\n      users = users ? JSON.parse(users) : {};\n      if (users[username]) {\n        if (users[username].password === password) {\n          yield AsyncStorage.setItem('mode', mode);\n          navigation.navigate('Home');\n        } else {\n          alert('Incorrect password. Please try again.');\n        }\n      } else {\n        users[username] = {\n          password: password,\n          mode: 'white'\n        };\n        yield AsyncStorage.setItem('users', JSON.stringify(users));\n        yield AsyncStorage.setItem('mode', 'white');\n        users = yield AsyncStorage.getItem('users');\n        users = users ? JSON.parse(users) : {};\n        navigation.navigate('Home');\n      }\n    });\n    return function handleLogin() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: [styles.container, {\n      backgroundColor: mode\n    }],\n    children: [_jsx(TextInput, {\n      placeholder: \"Username\",\n      onChangeText: setUsername,\n      value: username,\n      style: styles.input\n    }), _jsx(TextInput, {\n      placeholder: \"Password\",\n      onChangeText: setPassword,\n      value: password,\n      secureTextEntry: true,\n      style: styles.input\n    }), _jsx(Button, {\n      title: \"Login\",\n      onPress: handleLogin\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  input: {\n    width: '80%',\n    marginBottom: 20,\n    padding: 10,\n    borderWidth: 1,\n    borderRadius: 5\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","useEffect","View","TextInput","Button","StyleSheet","AsyncStorage","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","mode","setMode","fetchData","_ref2","_asyncToGenerator","storedMode","getItem","console","log","error","apply","arguments","handleLogin","_ref3","users","JSON","parse","setItem","navigate","alert","stringify","style","styles","container","backgroundColor","children","placeholder","onChangeText","value","input","secureTextEntry","title","onPress","create","flex","justifyContent","alignItems","width","marginBottom","padding","borderWidth","borderRadius"],"sources":["D:/MAD/PreMidTask/LoginScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, TextInput, Button, StyleSheet } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst LoginScreen = ({ navigation }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [mode, setMode] = useState('white');\r\n\r\n  useEffect(() => {\r\n    // Fetch mode from AsyncStorage when the component mounts\r\n    const fetchData = async () => {\r\n      try {\r\n        const storedMode = await AsyncStorage.getItem('mode');\r\n        if (storedMode) {\r\n            console.log(storedMode);\r\n            setMode(storedMode);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []); // Empty dependency array ensures useEffect runs once after initial render\r\n\r\n  const handleLogin = async () => {\r\n    // Fetch existing users from AsyncStorage\r\n    let users = await AsyncStorage.getItem('users');\r\n    users = users ? JSON.parse(users) : {};\r\n\r\n    // Check if the username already exists\r\n    if (users[username]) {\r\n      // If user exists, check the password\r\n      if (users[username].password === password) {\r\n        // Store mode and navigate to Home screen\r\n        await AsyncStorage.setItem('mode', mode);\r\n        navigation.navigate('Home');\r\n      } else {\r\n        alert('Incorrect password. Please try again.');\r\n      }\r\n    } else {\r\n      // If user doesn't exist, create a new user entry\r\n      users[username] = { password, mode: 'white' };\r\n      await AsyncStorage.setItem('users', JSON.stringify(users));\r\n      await AsyncStorage.setItem('mode', 'white');\r\n        users = await AsyncStorage.getItem('users');\r\n        users = users ? JSON.parse(users) : {};\r\n      navigation.navigate('Home');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={[styles.container, { backgroundColor: mode }]}>\r\n      <TextInput\r\n        placeholder=\"Username\"\r\n        onChangeText={setUsername}\r\n        value={username}\r\n        style={styles.input}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Password\"\r\n        onChangeText={setPassword}\r\n        value={password}\r\n        secureTextEntry\r\n        style={styles.input}\r\n      />\r\n      <Button title=\"Login\" onPress={handleLogin} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  input: {\r\n    width: '80%',\r\n    marginBottom: 20,\r\n    padding: 10,\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n  },\r\n});\r\n\r\nexport default LoginScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}