{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState('white'),\n    _useState2 = _slicedToArray(_useState, 2),\n    mode = _useState2[0],\n    setMode = _useState2[1];\n  useEffect(function () {\n    var fetchData = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var storedMode = yield AsyncStorage.getItem('mode');\n          if (storedMode) {\n            setMode(storedMode);\n            console.log(storedMode);\n          }\n        } catch (error) {\n          console.error(error);\n        }\n      });\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchData();\n  }, []);\n  var toggleMode = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var newMode = mode === 'white' ? 'black' : 'white';\n      if (mode == '') setMode(newMode);\n      yield AsyncStorage.setItem('mode', newMode);\n      console.log(mode);\n    });\n    return function toggleMode() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleLogout = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        yield AsyncStorage.clear();\n        var users = yield AsyncStorage.getItem('users');\n        users = users ? JSON.parse(users) : {};\n        console.log(users);\n        navigation.navigate('Login');\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function handleLogout() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: [styles.container, {\n      backgroundColor: mode\n    }],\n    children: [_jsx(Switch, {\n      value: mode === 'black',\n      onValueChange: toggleMode,\n      style: styles.switch\n    }), _jsx(Button, {\n      title: \"Logout\",\n      onPress: handleLogout\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  switch: {\n    marginBottom: 20\n  }\n});\nexport default HomeScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Button","StyleSheet","Switch","AsyncStorage","jsx","_jsx","jsxs","_jsxs","HomeScreen","_ref","navigation","_useState","_useState2","_slicedToArray","mode","setMode","fetchData","_ref2","_asyncToGenerator","storedMode","getItem","console","log","error","apply","arguments","toggleMode","_ref3","newMode","setItem","handleLogout","_ref4","clear","users","JSON","parse","navigate","style","styles","container","backgroundColor","children","value","onValueChange","switch","title","onPress","create","flex","justifyContent","alignItems","marginBottom"],"sources":["D:/MAD/PreMidTask/HomeScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Button, StyleSheet, Switch } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst HomeScreen = ({ navigation }) => {\r\n  const [mode, setMode] = useState('white');\r\n\r\n  useEffect(() => {\r\n    // Fetch mode from AsyncStorage\r\n    const fetchData = async () => {\r\n      try {\r\n        const storedMode = await AsyncStorage.getItem('mode');\r\n        if (storedMode) {\r\n          setMode(storedMode);\r\n          console.log(storedMode);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const toggleMode = async () => {\r\n    // Toggle mode between white and black and update in AsyncStorage\r\n    const newMode = mode === 'white' ? 'black' : 'white';\r\n    if(mode == '')\r\n\r\n    setMode(newMode);\r\n    await AsyncStorage.setItem('mode', newMode);\r\n    console.log(mode);\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    // Clear user data and navigate to Login screen\r\n    try {\r\n      await AsyncStorage.clear();\r\n      let users = await AsyncStorage.getItem('users');\r\n    users = users ? JSON.parse(users) : {};\r\n    console.log(users);\r\n      navigation.navigate('Login');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={[styles.container, { backgroundColor: mode }]}>\r\n      <Switch\r\n        value={mode === 'black'}\r\n        onValueChange={toggleMode}\r\n        style={styles.switch}\r\n      />\r\n      <Button title=\"Logout\" onPress={handleLogout} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  switch: {\r\n    marginBottom: 20,\r\n  },\r\n});\r\n\r\nexport default HomeScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}