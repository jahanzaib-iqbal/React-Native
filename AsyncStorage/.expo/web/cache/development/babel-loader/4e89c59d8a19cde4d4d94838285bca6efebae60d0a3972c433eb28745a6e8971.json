{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useEffect } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AuthLoadingScreen = function AuthLoadingScreen(_ref) {\n  var navigation = _ref.navigation;\n  useEffect(function () {\n    var checkAuthentication = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var userToken = yield AsyncStorage.getItem('users');\n          navigation.navigate(userToken ? 'Home' : 'Login');\n        } catch (error) {\n          console.error(error);\n        }\n      });\n      return function checkAuthentication() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    checkAuthentication();\n  }, [navigation]);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#0000ff\"\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default AuthLoadingScreen;","map":{"version":3,"names":["React","useEffect","ActivityIndicator","View","StyleSheet","AsyncStorage","jsx","_jsx","AuthLoadingScreen","_ref","navigation","checkAuthentication","_ref2","_asyncToGenerator","userToken","getItem","navigate","error","console","apply","arguments","style","styles","container","children","size","color","create","flex","justifyContent","alignItems"],"sources":["D:/Coding/React Native/AsyncStorageTask/AuthLoadingScreen.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { ActivityIndicator, View, StyleSheet } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst AuthLoadingScreen = ({ navigation }) => {\r\n  useEffect(() => {\r\n    // Check user authentication status in AsyncStorage\r\n    const checkAuthentication = async () => {\r\n      try {\r\n        const userToken = await AsyncStorage.getItem('users');\r\n        // If user data exists, navigate to Home screen; otherwise, navigate to Login screen\r\n        navigation.navigate(userToken ? 'Home' : 'Login');\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    checkAuthentication();\r\n  }, [navigation]);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ActivityIndicator size=\"large\" color=\"#0000ff\" />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nexport default AuthLoadingScreen;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,iBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAEzC,OAAOC,YAAY,MAAM,2CAA2C;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAErE,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACrCT,SAAS,CAAC,YAAM;IAEd,IAAMU,mBAAmB;MAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;QACtC,IAAI;UACF,IAAMC,SAAS,SAAST,YAAY,CAACU,OAAO,CAAC,OAAO,CAAC;UAErDL,UAAU,CAACM,QAAQ,CAACF,SAAS,GAAG,MAAM,GAAG,OAAO,CAAC;QACnD,CAAC,CAAC,OAAOG,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACtB;MACF,CAAC;MAAA,gBARKN,mBAAmBA,CAAA;QAAA,OAAAC,KAAA,CAAAO,KAAA,OAAAC,SAAA;MAAA;IAAA,GAQxB;IAEDT,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACD,UAAU,CAAC,CAAC;EAEhB,OACEH,IAAA,CAACJ,IAAI;IAACkB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC5BjB,IAAA,CAACL,iBAAiB;MAACuB,IAAI,EAAC,OAAO;MAACC,KAAK,EAAC;IAAS,CAAE;EAAC,CAC9C,CAAC;AAEX,CAAC;AAED,IAAMJ,MAAM,GAAGlB,UAAU,CAACuB,MAAM,CAAC;EAC/BJ,SAAS,EAAE;IACTK,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAetB,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}